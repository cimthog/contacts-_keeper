{"ast":null,"code":"var _jsxFileName = \"/Users/applemac/Documents/Tutorials/React/contactskeeper/client/src/components/contacts/Contacts.js\";\nimport React, { useContext, Fragment } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, filtered !== null ? filtered.map(contact => React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })) : contacts.map(contact => React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/applemac/Documents/Tutorials/React/contactskeeper/client/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","ContactItem","ContactContext","Contacts","contactContext","contacts","length","filtered","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGL,UAAU,CAACG,cAAD,CAAjC;;AAEA,MAAIG,QAAQ,CAACC,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AALoB,QAObD,QAPa,GAOUD,cAPV,CAObC,QAPa;AAAA,QAOHE,QAPG,GAOUH,cAPV,CAOHG,QAPG;AAQrB,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAClB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAIGJ,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAClB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALN,CADF;AAWD,CAnBD;;AAqBA,eAAeN,QAAf","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  if (contacts.length === 0) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  const { contacts, filtered } = contactContext;\n  return (\n    <Fragment>\n      {filtered !== null\n        ? filtered.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))\n        : contacts.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}