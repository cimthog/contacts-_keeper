{"ast":null,"code":"import _slicedToArray from \"/Users/applemac/Documents/Tutorials/React/contactskeeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/applemac/Documents/Tutorials/React/contactskeeper/client/src/context/alert/AlertState.js\";\nimport React, { useReducer } from \"react\";\nimport uuid from \"uuid\";\nimport AlertContext from \"./alertContext\";\nimport AlertReducer from \"./alertReducer\";\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const _useReducer = useReducer(AlertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Set Alert\n\n\n  const setAlert = (message, type) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/applemac/Documents/Tutorials/React/contactskeeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","uuid","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","message","type","id","v4","payload","msg","setTimeout","timeout","alerts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG,EAArB;;AAD0B,sBAGAR,UAAU,CAACG,YAAD,EAAeK,YAAf,CAHV;AAAA;AAAA,QAGnBC,KAHmB;AAAA,QAGZC,QAHY,oBAK1B;;;AACA,QAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAClC,UAAMC,EAAE,GAAGb,IAAI,CAACc,EAAL,EAAX;AACAL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,SADC;AAEPY,MAAAA,OAAO,EAAE;AAAEC,QAAAA,GAAF;AAAOJ,QAAAA,IAAP;AAAaC,QAAAA;AAAb;AAFF,KAAD,CAAR;AAKAI,IAAAA,UAAU,CAAC,MAAMR,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,YAAR;AAAsBW,MAAAA,OAAO,EAAEF;AAA/B,KAAD,CAAf,EAAsDK,OAAtD,CAAV;AACD,GARD;;AAUA,SACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAEX,KADH;AAELE,MAAAA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGJ,KAAK,CAACc,QANT,CADF;AAUD,CA1BD;;AA4BA,eAAef,UAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport uuid from \"uuid\";\nimport AlertContext from \"./alertContext\";\nimport AlertReducer from \"./alertReducer\";\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (message, type) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id }\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}